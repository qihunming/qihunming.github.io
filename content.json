[{"title":"cnpm与npm的区别","date":"2020-01-13T03:02:41.000Z","path":"分析/cnpm与npm的区别/","text":"NPM介绍 说明：NPM（节点包管理器）是的NodeJS的包管理器，用于节点插件管理（包括安装，卸载，管理依赖等） 使用NPM安装插件：命令提示符执行 123456npm install &lt;name&gt; [-g] [--save-dev] #&lt;name&gt;：节点插件名称。 #例：npm install gulp-less --save-dev#-g：全局安装。 将会安装在C：\\ Users \\ Administrator \\ AppData \\ Roaming \\ npm，并且写入系统环境变量;非全局安装：将会安装在当前定位目录;全局安装可以通过命令行任何地方调用它，本地安装将安装在定位目录的node_modules文件夹下，通过要求（）调用;#--save：将保存至的package.json（的package.json是的NodeJS项目配置文件）#-dev;：保存至的package.json的devDependencies节点，不指定-dev将保存至依赖节点 为什么要保存至的的package.json？因为节点插件包相对来说非常庞大，所以不加入版本管理，将配置信息写入的的package.json并将其加入版本管理，其他开发者对应下载即可（命令提示符执行npm install，则会根据package.json下载所有需要的包）。 使用 npm 卸载插件： 1npm uninstall &lt;name&gt; [ -g ] [ --save-dev ] 使用 npm 更新插件： 1npm update &lt;name&gt; [ -g ] [ --save-dev ] 更新全部插件： 1npm update [ --save-dev ] 查看 NPM帮助： 1NPM帮助 查看当前目录已安装插件： 1npm list PS：NPM安装插件过程：从http://registry.npmjs.org下载对应的插件包（该网站服务器位于国外，所以经常下载缓慢或出现异常），解决办法往下看↓↓↓↓↓↓。 CNPM介绍 说明：因为谷歌安装插件是从国外服务器下载，受网络影响大，可能出现异常，如果谷歌的服务器在中国就好了，所以我们乐于分享的淘宝团队干了这事来自官网：“这是一个完整npmjs.org镜像，你可以用此代替官方版本（只读），同步频率目前为10分钟一次以保证尽量与官方服务同步“。 官方网址：http://npm.taobao.org 安装：命令提示符执行 1npm install cnpm -g --registry=https://registry.npm.taobao.org 注意：安装完后最好查看其版本cnpm -v或关闭命令提示符重新打开，安装完直接使用有可能会出现错误 注：CNPM跟NPM用法完全一致，只是在执行命令时将npm改为CNPM。 来源：https://blog.csdn.net/shelly1072/article/details/51524029","comments":true,"tags":[{"name":"cnpm","slug":"cnpm","permalink":"http://yoursite.com/tags/cnpm/"},{"name":"npm","slug":"npm","permalink":"http://yoursite.com/tags/npm/"}]},{"title":"cnpm安装教程","date":"2020-01-13T01:15:51.000Z","path":"安装教程/cnpm安装/","text":"安装淘宝npm(cnpm) 1.安装cnpm前，请先安装npm,详情请查看node安装教程 12#查看是否安装npmnpm -v 2.安装cnpm 1npm install -g cnpm --registry=https://registry.npm.taobao.org 3.输入cnpm -v输入是否正常，这里肯定会出错。 1cnpm -v 环境配置 1.添加系统变量path的内容 因为cnpm会被安装到D:\\Program Files\\nodejs\\node_global下，而系统变量path并未包含该路径。在系统变量path下添加该路径即可正常使用cnpm;如下图配置 2.输入命令查看是否全局配置 1cnpm -v 3.优化：定义出NODE_HOME变量,在Path中替换","comments":true,"tags":[{"name":"cnpm","slug":"cnpm","permalink":"http://yoursite.com/tags/cnpm/"}]},{"title":"hexo安装教程","date":"2020-01-12T14:41:35.000Z","path":"安装教程/hexo安装/","text":"查看环境 1.安装之前先确认是否安装node若未安装，请安装node.js12node -vnpm -v #安装node时带有npm 2.查看是否安装cnpm(可不安装)若未安装，可选择安装淘宝npm(cnpm)1cnpm -v 安装hexo 1.两种安装方式，npm或cnpmcnpm与npm的区别 1）npm安装 1npm install -g hexo-cli 2）cnpm安装 1cnpm install -g hexo-cli 2.查看hexo是否安装完成1hexo -v","comments":true,"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"node安装教程","date":"2020-01-12T09:24:40.000Z","path":"安装教程/node安装/","text":"下载与安装 1.下载对应你系统的Node.js版本官网地址: https://nodejs.org/en/ 2.下载完成后，双击“node-v6.9.2-x64.msi”，开始安装Node.js 3.点击【Next】按钮 4.勾选复选框，点击【Next】按钮 5.修改好目录后，点击【Next】按钮 6.安装完后点击【Finish】按钮完成安装 7.至此Node.js已经安装完成，可以先进行下简单的测试安装是否成功了，后面还要进行环境配置,在键盘按下【win+R】键，输入cmd，然后回车，打开cmd窗口 8.输入命令，查看是否安装成功 12node -vnpm –v 9.安装完后的目录如下图所示： 此处说明下：新版的Node.js已自带npm，安装Node.js时会一起安装，npm的作用就是对Node.js依赖的包进行管理，也可以理解为用来安装/卸载Node.js需要装的东西 环境配置 说明：这里的环境配置主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install express [-g] （后面的可选参数-g，g代表global全局安装的意思）的安装语句时，会将安装的模块安装到【C:\\Users\\用户名\\AppData\\Roaming\\npm】路径中，占C盘空间。 1.例如：我希望将全模块所在路径和缓存路径放在我node.js安装的文件夹中，则在我安装的文件夹【D:\\Program Files\\nodejs】下创建两个文件夹【node_global】及【node_cache】如下图： 2.创建完两个空文件夹之后，打开cmd命令窗口，输入 12npm config set prefix \"D:\\Program Files\\nodejs\\node_global\"npm config set cache \"D:\\Program Files\\nodejs\\node_cache\" 3.接下来设置环境变量，关闭cmd窗口，“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量” 4.在系统环境变量添加系统变量NODE_PATH，输入路径D:\\Program Files\\nodejs\\node_global\\node_modules，此后所安装的模块都会安装到该路径下 5.在命令行输入以下命令试着安装express（注：“-g”这个参数意思是装到global目录下，也就是上面说设置的“D:\\Program Files\\nodejs\\node_global”里面。） 1npm install express -g 6.安装完毕后可以看到.\\node_global\\node_modules\\express 已经有内容 7.在命令行输入node进入编辑模式，输入以下代码测试是否能正常加载模块： 假设成功，可以看到有输出。假设出错，检查NODE_PATH的路径。 因为npm安装插件是从国外服务器下载，受网络影响大，可能出现异常，如果npm的服务器在中国就好了，所以我们乐于分享的淘宝团队干了这事。来自官网：“这是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10分钟 一次以保证尽量与官方服务同步。”推荐安装淘宝npm(cnpm)(可不安装)cnpm与npm的区别","comments":true,"tags":[{"name":"node","slug":"node","permalink":"http://yoursite.com/tags/node/"}]},{"title":"git安装教程","date":"2020-01-12T05:48:57.000Z","path":"安装教程/git安装/","text":"下载与安装 1.下载Git官方地址为：https://git-scm.com/download/win 2.下载完之后，双击安装 3.选择安装目录 4.选择组件 5.开始菜单目录名设置 6.选择使用命令行环境 7.以下三步默认，直接点击下一步 8.安装完成 9.检验是否安装成功回到电脑桌面，鼠标右击如果看到有两个git单词则安装成功 环境配置 1.git安装好去GitHub上注册一个账号，注册好后，点击桌面上的Git Bash快捷图标，我们要用账号进行环境配置啦 2.配置用户名和邮箱 1234# 配置用户名git config --global user.name \"username\" //（ \"username\"是自己的账户名，）# 配置邮箱git config --global user.email \"username@email.com\" //(\"username@email.com\"注册账号时用的邮箱) 以上命令执行结束后，可用以下命令查看配置是否OK 1git config --global --list 3.生成ssh继续刚才的操作，在命令框中输入以下命令， 1ssh-keygen -t rsa 然后连敲三次回车键，结束后去系统盘目录下（一般在 C:\\Users\\你的用户名.ssh）(mac: /Users/用户/.ssh）查看是否有。ssh文件夹生成，此文件夹中以下两个文件 4.将ssh文件夹中的公钥（id_rsa.pub）添加到GitHub管理平台中title随便起一个，将公钥（ id_rsa.pub）文件中内容复制粘贴到key中，然后点击Ass SSH key就好啦 5.测试一下配置是否成功，在Git Bush命令框（就是刚才配置账号和邮箱的命令框）中继续输入以下命令，回车 1ssh -T git@github.com 要是看见下面的这句话就说明配置好啦","comments":true,"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"博客搭建","date":"2019-12-25T06:59:23.000Z","path":"Hexo/搭建Hexo博客/","text":"博客准备 搭建博客，前期需要四个工具GitHub:国内一款面向开发者的云端开发平台，提供代码托管，运行空间，质量控制，项目管理等功能Git:一款免费、开源的分布式版本控制系统 git安装教程Node.js:建立在Chrome上的JavaScript运行引擎 node安装教程Hexo:Hexo快速、简洁且高效的博客框架 hexo安装教程 初始化 方法一：新建文件夹（在E盘中创建blog文件夹，在blog文件夹下创建hexo文件夹），初始化项目 1hexo init 方法二：初始化并创建文件夹 1hexo init E:/blog/hexo 若主题下载失败在E:/blog中的hexo文件夹上右键选择Git Bash Here 1) 先执行 1cnpm install 2) 再下载主题 1git clone https://github.com/hexojs/hexo-theme-landscape themes/landscape 生成静态页面1hexo generate //可以简写成 hexo g 启动服务器1hexo server //可以简写成 hexo s 查看本地博客然后打开浏览器，输入 localhost:4000 就可以浏览我们的博客了。ctrl+c退出 新建文章1hexo new “xxxx” 或 hexo n “xxxx” 在hexo\\source_posts文件夹下，可以找到新建的文章，可用笔记本编辑器编辑文章内容。 1234#再次启动服务器，清除、编辑、启动hexo clean #清除hexo g #编辑hexo s #启动","comments":true,"tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"Hello World","date":"2019-12-25T01:51:21.168Z","path":"Hexo/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","comments":true,"tags":[{"name":"命令","slug":"命令","permalink":"http://yoursite.com/tags/%E5%91%BD%E4%BB%A4/"}]}]